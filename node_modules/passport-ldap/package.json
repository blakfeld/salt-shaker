{
  "name": "passport-ldap",
  "version": "0.0.1",
  "description": "LDAP authentication strategy for Passport.",
  "author": {
    "name": "Paul Dixon",
    "email": "paul.dixon@mintbridge.co.uk",
    "url": "http://www.mintbridge.co.uk/"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/mintbridge/passport-ldap.git"
  },
  "bugs": {
    "url": "http://github.com/mintbridge/passport-ldap/issues"
  },
  "main": "./lib/passport-ldap",
  "dependencies": {
    "pkginfo": "0.2.x",
    "ldapjs": "0.6.2"
  },
  "devDependencies": {
    "vows": "0.6.x"
  },
  "scripts": {
    "test": "NODE_PATH=lib node_modules/.bin/vows test/*-test.js"
  },
  "engines": {
    "node": ">= 0.4.0"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "http://www.opensource.org/licenses/MIT"
    }
  ],
  "keywords": [
    "passport",
    "ldap",
    "auth",
    "authn",
    "authentication",
    "identity"
  ],
  "readme": "# Passport-LDAP\n\n[Passport](http://passportjs.org/) strategy for authenticating against an OpenLDAP\nserver.\n\nThis module lets you authenticate against an OpenLDAP server in your Node.js applications.\nBy plugging into Passport, LDAP authentication can be easily and\nunobtrusively integrated into any application or framework that supports\n[Connect](http://www.senchalabs.org/connect/)-style middleware, including\n[Express](http://expressjs.com/).\n\n## Install\n\n    $ npm install passport-ldap\n\n## Usage\n\n#### Configure Strategy\n\nThe LDAP authentication strategy authenticates requests by delegating to the\ngiven ldap server using the openldap protocol.\n\nThe strategy requires a `verify` callback which accepts a user `profile` entry\nfrom the directory, and then calls the `done` callback supplying a `user`.\n\n    passport.use(new LDAPStrategy({\n        url: 'ldap://0.0.0.0:1389',\n        base: 'o=example',\n        search: {\n          filter: '(&(l=Seattle)(email=*@foo.com))',\n         }\n      },\n      function(profile, done) {\n        return done(null, profile);\n      }\n    ));\n\n#### Authenticate Requests\n\nUse `passport.authenticate()`, specifying the `'ldap'` strategy, to\nauthenticate requests.\n\nFor example, as route middleware in an [Express](http://expressjs.com/)\napplication:\n\n    app.get('/auth/login',\n      passport.authenticate('facebook'));\n\n    app.post('/auth/ldap',\n      passport.authenticate('ldap', {\n        successRedirect: '/',\n        failureRedirect: '/auth/login/'\n      })\n    );\n\n#### Profile Fields\n\n## Examples\n\nFor a complete, working example, refer to the [login example](https://github.com/mintbridge/passport-ldap/tree/master/examples/login).\n\n## Tests\n\n    $ npm install --dev\n    $ make test\n\n[![Build Status](https://secure.travis-ci.org/mintbridge/passport-ldap.png)](http://travis-ci.org/mintbridge/mintbridge/passport-ldap)\n\n## Credits\n\n  - [Paul Dixon](http://github.com/mintbridge)\n\n## License\n\n[The MIT License](http://opensource.org/licenses/MIT)\n\nCopyright (c) 2011-2013 Paul Dixon <[http://www.mintbridge.co.uk/](http://www.mintbridge.co.uk)>\n",
  "readmeFilename": "README.md",
  "_id": "passport-ldap@0.0.1",
  "dist": {
    "shasum": "51e66c0f4cad8e6db2e8511d4a7c099d86f82c6b"
  },
  "_from": "passport-ldap@0.0.1",
  "_resolved": "https://registry.npmjs.org/passport-ldap/-/passport-ldap-0.0.1.tgz"
}
